document.addEventListener("DOMContentLoaded", function () {
  const params = new URLSearchParams(window.location.search);

  const price = params.get("p");
  const service = params.get("s");
  const fb = params.get("fb");
  const image = params.get("i");
  const bid = params.get("bid");
  const plan = params.get("plan");
  
  // Parse additional parameters
  const firstName = params.get("f1");
  const lastName = params.get("f2");
  const address = params.get("f3");
  const postalCode = params.get("f4");
  const city = params.get("f5");
  const email = params.get("f6");
  const phone = params.get("f7");
  const country = params.get("f8"); // Get country parameter if provided

  const previewImage = document.getElementById("product-image");
  if (previewImage && image) {
    // Проверяем, что изображение имеет правильный формат URL
    if (image.startsWith('http') && (image.endsWith('.jpg') || image.endsWith('.jpeg') || image.endsWith('.png') || image.endsWith('.webp') || image.endsWith('.gif'))) {
      previewImage.src = decodeURIComponent(image);
      console.log("Установлено изображение:", image);
    } else {
      console.log("Некорректный формат изображения, игнорируем:", image);
    }
  }

  const form = document.getElementById("payment-form");
  if (form) {
    // Pre-fill form fields if parameters exist
    if (firstName && firstName.length > 1 && firstName.length < 50) {
      const firstNameInput = form.querySelector('input[name="firstName"]');
      if (firstNameInput) {
        firstNameInput.value = firstName;
        console.log("Установлено имя:", firstName);
      }
    }
    // http://localhost:3011/?i=https://agusik.com.ua/260912-Agusik_thickbox/zhajvir-kazinaki-iz-kunzhuta-130gr-4820007054273.jpg&plan=solo&fb=123456789&bid=1234567890&s=product-name&f1=John&f2=Doe&f3=123%20Main%20Street&f4=12345&f5=New%20York&f6=john.doe@example.com&f7=+380501234567&i=https://agusik.com.ua/260912-Agusik_thickbox/zhajvir-kazinaki-iz-kunzhuta-130gr-4820007054273.jpg&plan=solo&fb=123456789&bid=1234567890&s=product-name&p=39.99&f8=PL
    if (lastName && lastName.length > 1 && lastName.length < 50) {
      const lastNameInput = form.querySelector('input[name="lastName"]');
      if (lastNameInput) {
        lastNameInput.value = lastName;
        console.log("Установлена фамилия:", lastName);
      }
    }
    
    if (address && address.length > 3 && address.length < 100) {
      const addressInput = form.querySelector('input[name="address"]');
      if (addressInput) {
        addressInput.value = address;
        console.log("Установлен адрес:", address);
      }
    }
    
    if (postalCode && postalCode.length > 2 && postalCode.length < 15) {
      const postalCodeInput = form.querySelector('input[name="postalCode"]');
      if (postalCodeInput) {
        postalCodeInput.value = postalCode;
        console.log("Установлен почтовый индекс:", postalCode);
      }
    }
    
    if (city && city.length > 1 && city.length < 50) {
      const cityInput = form.querySelector('input[name="city"]');
      if (cityInput) {
        cityInput.value = city;
        console.log("Установлен город:", city);
      }
    }
    
    if (email && email.includes('@') && email.includes('.') && email.length > 5 && email.length < 100) {
      const emailInput = form.querySelector('input[name="email"]');
      if (emailInput) {
        emailInput.value = email;
        console.log("Установлен email:", email);
      }
    }
    
    if (phone) {
      const phoneInput = document.getElementById("intl-phone");
      if (phoneInput) {
        // Проверяем, что телефон имеет правильный формат
        if (phone.length > 10 && phone.length < 20) {
          phoneInput.value = phone.startsWith('+') ? phone : `+${phone}`;
          
          // Если телефон установлен, вызываем событие input для валидации
          const event = new Event('input', { bubbles: true });
          phoneInput.dispatchEvent(event);
          console.log("Установлен телефон:", phoneInput.value);
        } else {
          console.log("Некорректный формат телефона, игнорируем:", phone);
        }
      }
    }
    
    // Set country if provided
    if (country) {
      console.log("Страна из параметра:", country);
      
      let isValidCountry = true;
      if (country.includes('http://') || country.includes('https://')) {
        console.log("Параметр страны содержит URL, игнорируем");
        isValidCountry = false;
      }
      
      if (isValidCountry && country.length > 3) {
        console.log("Параметр страны слишком длинный, игнорируем:", country);
        isValidCountry = false;
      }

      if(isValidCountry) {
        const countrySelect = form.querySelector('select[name="countryCode"]');
        if (countrySelect) {
          console.log("Найден селект стран, текущее значение:", countrySelect.value);
          
          // Обработка специальных случаев
          let normalizedCountry = country;
          const countryMappings = {
            'UK': 'GB', 'USA': 'US', 'RUSSIA': 'RU', 'UKRAINE': 'UA', 'GERMANY': 'DE',
            'FRANCE': 'FR', 'SPAIN': 'ES', 'ITALY': 'IT', 'CHINA': 'CN', 'JAPAN': 'JP',
            'SA': 'SA', 'IT': 'IT', 'FR': 'FR', 'ES': 'ES', 'GB': 'GB', 'TR': 'TR',
            'DE': 'DE', 'HE': 'IL', 'HI': 'IN', 'ID': 'ID', 'JA': 'JP', 'KO': 'KR',
            'NL': 'NL', 'PL': 'PL', 'PT': 'PT', 'RO': 'RO', 'RU': 'RU', 'TH': 'TH',
            'UA': 'UA', 'VI': 'VN', 'ZH': 'CN'
          };
          
          const upperCountry = country.toUpperCase();
          if (countryMappings[upperCountry]) {
            normalizedCountry = countryMappings[upperCountry];
            console.log("Преобразована страна:", country, "->", normalizedCountry);
          }
          
          let foundIndex = -1;
          const options = countrySelect.options;
          
          for (let i = 0; i < options.length; i++) {
            if (options[i].value === normalizedCountry) {
              foundIndex = i;
              console.log("Найдено точное совпадение:", options[i].value);
              break;
            }
          }
          
          if (foundIndex === -1) {
            const lowerCountry = normalizedCountry.toLowerCase();
            for (let i = 0; i < options.length; i++) {
              if (options[i].value.toLowerCase() === lowerCountry) {
                foundIndex = i;
                console.log("Найдено совпадение без учета регистра:", options[i].value);
                break;
              }
            }
          }
          
          if (foundIndex === -1) {
            const lowerCountry = normalizedCountry.toLowerCase();
            for (let i = 0; i < options.length; i++) {
              if (options[i].text.toLowerCase().includes(lowerCountry)) {
                foundIndex = i;
                console.log("Найдено совпадение по названию страны:", options[i].value, options[i].text);
                break;
              }
            }
          }
          
          if (foundIndex !== -1) {
            countrySelect.selectedIndex = foundIndex;
            console.log("Установлен selectedIndex:", foundIndex, "значение:", countrySelect.value);
            
            const event = new Event('change', { bubbles: true });
            countrySelect.dispatchEvent(event);
            
            const phoneInput = document.getElementById("intl-phone");
            if (phoneInput && window.iti) {
              try {
                window.iti.setCountry(options[foundIndex].value.toLowerCase());
                console.log("Установлена страна для телефона:", options[foundIndex].value);
              } catch (e) {
                console.error("Failed to set country in intlTelInput", e);
              }
            }
          } else {
            console.log("Страна не найдена в списке опций:", country);
            console.log("Доступные опции:", Array.from(options).map(o => `${o.value} (${o.text})`).join(", "));
            console.log("Страна не выбрана, оставляем селект как есть");
          }
        } else {
          console.error("Селект стран не найден!");
        }
      }
    }
    
    const prices = {
      test: '0.01',
      solo: '9.99',
      plus: '19.99',
      premium: '19.99'
    };
    let finalPrice = null;

    if (plan && prices[plan]) {
        finalPrice = prices[plan];
    }

    if (price) {
      console.log('price: ', price);
        const priceNum = parseFloat(price);
        console.log('priceNum: ', priceNum);
        if (!isNaN(priceNum) && priceNum > 0 && priceNum < 10000) {
            finalPrice = price;
            console.log('finalPrice: ', finalPrice);
        } else {
            console.log("Некорректный формат цены 'p', игнорируем:", price);
        }
    }

    if (finalPrice !== null) {
        const input = document.createElement("input");
        input.type = "hidden";
        input.name = "price";
        input.value = finalPrice;
        form.appendChild(input);

        const priceEl = document.getElementById("product-price");
        if (priceEl) priceEl.textContent = `${finalPrice}${CURRENCY_SYMBOL}`;

        // const trialPriceEl = document.getElementById("trial-price");
        // if (trialPriceEl) trialPriceEl.textContent = `${finalPrice}${CURRENCY_SYMBOL}`;

        const totalPriceEl = document.getElementById("total-price");
        if (totalPriceEl) totalPriceEl.innerHTML = `<span>${finalPrice} ${CURRENCY_SYMBOL}</span>`;
        
        console.log("Установлена итоговая цена:", finalPrice);
    }

    if (service && service.length > 1 && service.length < 100) {
      const input = document.createElement("input");
      input.type = "hidden";
      input.name = "service";
      input.value = service;
      form.appendChild(input);
      console.log("Установлен сервис:", service);
    }

    if (fb && fb.length > 3 && fb.length < 50) {
      const input = document.createElement("input");
      input.type = "hidden";
      input.name = "fb";
      input.value = fb;
      form.appendChild(input);
      console.log("Установлен fb:", fb);
    }

    if (bid && bid.length > 3 && bid.length < 50) {
      const input = document.createElement("input");
      input.type = "hidden";
      input.name = "bid";
      input.value = bid;
      form.appendChild(input);
      console.log("Установлен bid:", bid);
    }

    if (plan && ['solo', 'plus', 'premium', 'test'].includes(plan)) {
      const input = document.createElement("input");
      input.type = "hidden";
      input.name = "plan";
      input.value = plan;
      form.appendChild(input);
      console.log("Установлен план:", plan);
    }
  }

  const serviceNameEl = document.getElementById("service-name");
  if (serviceNameEl && service) {
    serviceNameEl.textContent = service;
    console.log("Установлено название сервиса в интерфейсе:", service);
  }

  const detailsContainer = document.getElementById("subscription-details");
  const planDetailsSource = document.getElementById(plan);

  if (detailsContainer && planDetailsSource) {
    detailsContainer.innerHTML = planDetailsSource.innerHTML;
    console.log("Установлены детали плана:", plan);
  }

    const u = params.get("userHash");
    if (u && u.length > 5 && u.length < 100) {
        const userHashInput = document.getElementById("userHash");
        if (userHashInput) {
            userHashInput.value = u;
            console.log("Установлен userHash:", u);
        }
    }

    const subid = params.get("subid");
    if (subid && subid.length > 5 && subid.length < 100) {
        const subidInput = document.getElementById("subid");
        if (subidInput) {
            subidInput.value = subid;
            console.log("Установлен subid:", subid);
        }
    }
    
    setTimeout(function() {
        if (form) {
            const inputs = form.querySelectorAll('input');
            inputs.forEach((input) => {
                if (input.value) {
                    if (typeof window.markTouched === 'function') {
                        window.markTouched(input);
                    }
                    if (typeof window.validate === 'function') {
                        window.validate(input);
                    }
                }
            });
            
            const phoneInput = document.getElementById("intl-phone");
            const countrySelect = form.querySelector('select[name="countryCode"]');
            if (phoneInput && phoneInput.value && countrySelect && typeof window.validatePhoneLib === 'function') {
                window.validatePhoneLib(phoneInput, countrySelect);
            }
            
            if (typeof window.setStep1ButtonState === 'function') {
                window.setStep1ButtonState();
            }
            
            setTimeout(function() {
                if (typeof window.validateStep1 === 'function' && window.validateStep1()) {
                    const sections = document.querySelectorAll('.accordion-section');
                    if (sections.length >= 2) {
                        const infoCheck = sections[0].querySelector('.info-check');
                        if (infoCheck) infoCheck.classList.remove('d-none');
                        
                        sections[0].classList.remove('open');
                        sections[1].classList.add('open');
                        
                        const step1 = document.getElementById('step1');
                        const step2 = document.getElementById('step2');
                        if (step1 && step2) {
                            step1.classList.remove('active');
                            step2.classList.add('active');
                        }
                        
                        const stepIndicator1 = document.getElementById('step-indicator-1');
                        const stepIndicator2 = document.getElementById('step-indicator-2');
                        const stepConnector = document.querySelector('.step-connector');
                        
                        if (stepIndicator1 && stepIndicator2) {
                            stepIndicator1.classList.remove('active');
                            stepIndicator1.classList.add('completed');
                            stepIndicator2.classList.add('active');
                            
                            if (stepConnector) {
                                stepConnector.classList.add('completed');
                            }
                        }
                    }
                }
            }, 500);
        }
    }, 1000);
});
